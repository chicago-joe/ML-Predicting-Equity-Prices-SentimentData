version: '2'
services:

  #RabbitMQ broker, for Celery
  rabbit:
    hostname: rabbit
    image: ghcr.io/chicago-joe/sma-ib-trading-docker_rabbitmq:v3.7.3
    restart: unless-stopped
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_DEFAULT_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_DEFAULT_PASS}

  #Flower UI for Celery queue
  ui:
#    build: ./celery-ib
    image: ghcr.io/chicago-joe/sma-ib-trading-docker_celery:v1.1
    command: flower -A celery_tutorial.celery_app --port=5555 --broker=amqp://${RABBITMQ_DEFAULT_USER}:${RABBITMQ_DEFAULT_PASS}@rabbit --auto_refresh=True --loglevel="DEBUG"
    environment:
      - BROKER=amqp://${RABBITMQ_DEFAULT_USER}:${RABBITMQ_DEFAULT_PASS}@rabbit
    volumes:
      - ./celery_tutorial:/celery_tutorial
      - ./ibapi:/ibapi
    ports:
        - "127.0.0.1:5010:5555"
    links:
        - rabbit
    depends_on:
        - rabbit
    restart: unless-stopped

  #Python Celery worker
  worker-1:
#    build: ./celery-ib
    image: ghcr.io/chicago-joe/sma-ib-trading-docker_celery:v1.1
#    command: celery -A worker -l "DEBUG" -Ofair --concurrency=1
    command:  celery -A celery_tutorial.celery_app worker -l "DEBUG"
    restart: unless-stopped
    environment:
      - BROKER=amqp://${RABBITMQ_DEFAULT_USER}:${RABBITMQ_DEFAULT_PASS}@rabbit
      - ECHEANCE_CAC40=${ECHEANCE_CAC40}
      - ECHEANCE_DAX=${ECHEANCE_DAX}
      - ECHEANCE_EUROSTOXX=${ECHEANCE_EUROSTOXX}
      - ECHEANCE_FTSEMIB=${ECHEANCE_FTSEMIB}
    volumes:
      - ./celery_tutorial:/celery_tutorial
      - ./ibapi:/ibapi
      - ./logs:/logs
    links:
      - tws:tws

  #Celery beat, to schedule periodic tasks
  beat:
#    build: ./celery-ib
    image: ghcr.io/chicago-joe/sma-ib-trading-docker_celery:v1.1
    command: celery -A celery_tutorial.celery_app beat -l "DEBUG"
    restart: unless-stopped
    environment:
      - BROKER=amqp://${RABBITMQ_DEFAULT_USER}:${RABBITMQ_DEFAULT_PASS}@rabbit
    links:
        - rabbit
    depends_on:
        - rabbit
    volumes:
      - ./celery_tutorial:/celery_tutorial
      - ./ibapi:/ibapi

  #Interactive Broker containerized API
  tws:
    build: ./ib-docker
#    image: ghcr.io/chicago-joe/sma-ib-trading-docker_tws:v1.1
#    network_mode: host
    ports:
      - "4002:4002"
      - "5900:5900"
#      - "8080:8080"
    volumes:
      - ./ib-docker/ib/IBController.ini:/root/IBController/IBController.ini
      - ./ib-docker/ib/jts.ini:/root/Jts/jts.ini
    restart: unless-stopped
    environment:
      - TZ=America/Chicago
      - VNC_PASSWORD=password # CHANGEME
      - TWS_MAJOR_VRSN=974
      - IBC_INI=/root/IBController/IBController.ini
      - IBC_PATH=/opt/IBController
      - TWS_PATH=/root/Jts
      - TWS_CONFIG_PATH=/root/Jts
      - LOG_PATH=/opt/IBController/Logs
      - JAVA_PATH=/opt/i4j_jres/1.8.0_152/bin # JRE is bundled starting with TWS 952
      - TRADING_MODE=paper # either paper or live
      - TWSUSERID=schran892 # IB account
      - TWSPASSWORD=Quant1984! # IB account password
      - FIXUSERID=
      - FIXPASSWORD=
      - APP=GATEWAY
#      - DB_UPSTREAM=http://${DOCKER_GATEWAY_HOST:-host.docker.internal}:3000
#    extra_hosts:
#      - "outside:127.0.0.1"
#      - "host.docker.internal:host-gateway"


  "tws-gui":
#    build: ./_GUI
    image: ghcr.io/chicago-joe/sma-ib-trading-docker_tws-gui:v1.1
    environment:
      - TZ=America/Chicago
    logging:
      driver: "none"
    ports:
      - "5904:5900"
    volumes:
      - ./_GUI:/var/lib/GUI

  #Database web client
  phpmyadmin:
    image: phpmyadmin/phpmyadmin:latest      # :5.0.4
#    image: ghcr.io/chicago-joe/sma-ib-trading-docker_phpmyadmin:latest
    environment:
      PMA_HOST: smadb-mysql-nyc3-92441-do-user-8902518-0.b.db.ondigitalocean.com
      PMA_PORT: 25060
      MYSQL_USERNAME: aschran89
      MYSQL_PWD: dz78ox0f50mn7xno
    restart: unless-stopped
    ports:
      - 8081:80

  #Grafana to explore and visualise data
  grafana:
    image: grafana/grafana:latest      # :5.0.3
#    image: ghcr.io/chicago-joe/sma-ib-trading-grafana:v2.1
    restart: unless-stopped
    ports:
        - "127.0.0.1:7000:3000"
    volumes:
      - ./grafana:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=password
